{"version":3,"sources":["checkAuth.js","components/Header/index.js","components/Header/Header.js","components/Login/index.js","components/Login/Login.js","components/GettingStarted/index.js","components/GettingStarted/GettingStarted.js","components/SignUp/index.js","components/SignUp/SignUp.js","components/NewBusiness/index.js","components/NewBusiness/NewBusiness.js","components/Map/index.js","components/Map/Map.js","components/Search/index.js","components/Search/Search.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["checkAuth","cookie","parse","document","Header","className","to","onClick","Login","useState","setUsers","useEffect","callBackendAPI","then","res","catch","err","console","log","a","fetch","response","json","body","status","Error","message","Container","maxWidth","onSubmit","evt","preventDefault","window","location","replace","TextField","required","name","placeholder","type","style","marginTop","Button","variant","background","color","fontFamily","GettingStarted","fontWeight","SignUp","firstName","setFirstName","lastName","setLastName","city","setCity","state","setState","county","setCounty","zip","setZip","phone","setPhone","email","setEmail","userName","setUserName","password","setPassword","handleTextChange","target","value","textInput1","useRef","textInput2","textInput3","textInput4","textInput5","textInput6","textInput7","textInput8","textInput9","textInput10","method","headers","Accept","JSON","stringify","rawResponse","content","onChange","inputRef","setTimeout","current","NewBusiness","setName","address","setAddress","chain","setChain","militaryDiscount","setMilitaryDiscount","Typography","Map","lat","lng","defaultCenter","Number","googleMapsApiKey","mapContainerStyle","height","width","zoom","center","position","Search","businesses","setBusinesses","nameInput","zipInput","cityInput","dataPool","setDataPool","selectedBusiness","setSelectedBusiness","selectedAddress","setSelectedAddress","setLat","setLng","input","found","filter","business","toLowerCase","includes","React","page","setPage","rowsPerPage","setRowsPerPage","Geocode","setApiKey","fromAddress","results","geometry","error","textAlign","fontSize","left","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","slice","map","idx","hover","role","tabIndex","index","markerAddress","handleMarker","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","Router","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ab8c9bc0.chunk.js","sourcesContent":["import cookie from \"cookie\";\n\nexport const checkAuth = () => {\n  const cookies = cookie.parse(document.cookie);\n  return cookies[\"loggedIn\"] ? true : false;\n};\n","import Header from \"./Header\";\nexport default Header;","import React from \"react\";\nimport \"../Header/Header.css\";\nimport { Link } from \"react-router-dom\";\nimport { checkAuth } from \"../../checkAuth\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { Link } from \"react-router-dom\";\n// import { AppBar, Toolbar, Fade, Typography, Paper } from \"@material-ui/core\";\n// import App from \"../../App\";\n// import { checkAuth } from \"../../checkAuth\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   title: {\n//     flexGrow: 1,\n//   },\n//   appBar: {\n//     paddingLeft: 25,\n//     paddingRight: 25,\n//     padding: 5,\n//   },\n//   fadeIn: {\n//     padding: 6,\n//     paddingLeft: \"5%\",\n//   },\n// }));\n\nexport default function Header() {\n  return (\n    <>\n      <div className=\"header\">\n        <h1 className=\"title\">Weeble.</h1>\n        <nav>\n          <ul className=\"list\">\n            <li>\n              <Link to=\"/\">Getting Started</Link>\n            </li>\n            <li>\n              <Link to=\"/search\">Search</Link>\n            </li>\n            {checkAuth() && (\n              <li>\n                <Link to=\"/newbusiness\">Add Business</Link>\n              </li>\n            )}\n            {checkAuth() ? (\n              <li\n                onClick={() => {\n                  document.cookie = \"loggedIn=\";\n                  // window.location.replace(\"/login\");\n                }}\n              >\n                <Link to=\"/login\">Logout</Link>\n              </li>\n            ) : (\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            )}\n          </ul>\n        </nav>\n      </div>\n    </>\n  );\n}\n","import Login from \"./Login\";\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport \"../Login/Login.css\";\nimport { TextField, Button, Container } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Login() {\n  const [users, setUsers] = useState([]);\n\n  //\n  //// Use useEffect to call the function that will fetch data from backend and set state with response.  Now we have access to all our businesses and can filter through them as needed.\n  useEffect(() => {\n    callBackendAPI()\n      .then((res) => setUsers(res))\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  const callBackendAPI = async () => {\n    const response = await fetch(\"/users\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    document.cookie = \"loggedIn = true; max-age = 60*1000\";\n    // props.userLogin(userName);\n    // props.history.push(\"/\");\n    window.location.replace(\"/\");\n  };\n\n  return (\n    <div className=\"body\">\n      <Container maxWidth=\"sm\">\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n          <TextField\n            // autoFocus=\"true\"\n            required\n            // onChange={handleTextChange}\n            name=\"userName\"\n            placeholder=\"Username\"\n            type=\"text\"\n          />\n          <TextField\n            required\n            // onChange={handleTextChange}\n            name=\"password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            style={{ marginTop: 15 }}\n          />\n          <div className=\"buttons\">\n            <Button\n              type=\"submit\"\n              className=\"login-button\"\n              variant=\"contained\"\n              style={{\n                background: \"#E84855\",\n                color: \"#fbf7ef\",\n                fontFamily: \"IBM Plex Mono\",\n              }}\n              // onClick={usersLog}\n            >\n              Login\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"login-button\"\n              variant=\"contained\"\n              style={{\n                background: \"#E84855\",\n                color: \"#fbf7ef\",\n                fontFamily: \"IBM Plex Mono\",\n              }}\n            >\n              <Link to=\"/signUp\">Signup</Link>\n            </Button>\n          </div>\n        </form>\n      </Container>\n    </div>\n  );\n}\n","import GettingStarted from \"./GettingStarted\";\nexport default GettingStarted;\n","import React from \"react\";\nimport \"../GettingStarted/GettingStarted.css\";\nimport { Link } from \"react-router-dom\";\nimport {\n  // Typography,\n  // Box,\n  // Grid,\n  // Card,\n  // CardMedia,\n  // Paper,\n  // Container,\n  // List,\n  // ListItem,\n  // TextField,\n  Button,\n  // CardActionArea,\n} from \"@material-ui/core\";\n// import Image from \"material-ui-image\";\n\nexport default function GettingStarted() {\n  return (\n    <div className=\"container\">\n      <div className=\"imgContainer\"></div>\n\n      <div className=\"intro\">\n        <span>\n          Every Veteran or First Responder has gone through the interactions of\n          trying to find out if an establishment offers discounts to you.\n          Sometimes these efforts can be a real pain if the person on the other\n          side of the counter has to start searching for answers. Some people\n          would rather not ask, because that's not their personality.\n        </span>\n        <br />\n        <br />\n        <span>\n          Introducing\n          <span style={{ color: \"#49a4d1\", fontWeight: \"bold\" }}>\n            {\" \"}\n            Weeble!{\" \"}\n          </span>\n          An app created to help bridge the gap between Veterans / First\n          Responders and their potential discounts.\n        </span>\n        <br />\n        <br />\n        <br />\n        <span>It's as easy as 1, 2, 3:</span>\n        <ul>\n          <li>Login or Signup to the app with basic information.</li>\n          <br />\n          <li>\n            Search for known discounts from places near you by name, city, and\n            zip.\n          </li>\n          <br />\n          <li>\n            If you happen to run across a place that has discounts, but does not\n            show up...Add it!\n          </li>\n        </ul>\n        <br />\n        <span>\n          Lets look after one another and help each other save. You never know\n          what someone is going through...a few extra bucks can make a\n          difference.\n        </span>\n        <div className=\"intro-buttons\">\n          <Button\n            type=\"submit\"\n            className=\"intro-button\"\n            variant=\"contained\"\n            style={{\n              background: \"#E84855\",\n              color: \"#fbf7ef\",\n              fontFamily: \"IBM Plex Mono\",\n            }}\n          >\n            <Link to=\"/login\">Login</Link>\n          </Button>\n          <Button\n            type=\"submit\"\n            className=\"intro-button\"\n            variant=\"contained\"\n            style={{\n              background: \"#E84855\",\n              color: \"#fbf7ef\",\n              fontFamily: \"IBM Plex Mono\",\n            }}\n          >\n            <Link to=\"/signUp\">Sign up</Link>\n          </Button>\n        </div>\n      </div>\n    </div>\n    // <Container className=\"body\" mx=\"auto\">\n    //   <Grid container spacing={5}>\n    //     <Grid item xs={6}>\n    //       <Box\n    //         p={4}\n    //         display=\"flex\"\n    //         flexDirection=\"column\"\n    //         className=\"imgBox\"\n    //       ></Box>\n    //     </Grid>\n    //     <Grid item xs={6}>\n    //       <Box m={1} display=\"flex\" flexDirection=\"column\" className=\"summary\">\n    //         <Typography>\n    //           Every Veteran or First Responder has gone through the interaction\n    //           of trying to find out if an establishment offers discounts to you.\n    //           Sometimes these efforts can be a real pain if the person on the\n    //           other side of the counter has to start searching for answers.\n    //         </Typography>\n    //         <br />\n    //         <Typography>\n    //           Intoducing Weeble! An app created to help bridge the gap between\n    //           Veterans and First Responders and their potential discounts.\n    //         </Typography>\n    //         <br />\n    //         <Typography>\n    //           Its as easy as 1, 2, 3:\n    //           <List>\n    //             <ListItem>\n    //               1. Login or Signup to the app with basic information.\n    //             </ListItem>\n    //             <ListItem>\n    //               2. Search for known discounts from places near you by name,\n    //               city, and zip.\n    //             </ListItem>\n    //             <ListItem>\n    //               3. If you happen to run across a place that has discounts, but\n    //               does not show up...Add it!\n    //             </ListItem>\n    //           </List>\n    //         </Typography>\n    //       </Box>\n    //     </Grid>\n    //   </Grid>\n    // </Container>\n  );\n}\n","import SignUp from \"./SignUp\";\nexport default SignUp;\n","import React, { useState, useRef } from \"react\";\nimport \"../SignUp/SignUp.css\";\nimport { TextField, Button, Container } from \"@material-ui/core\";\n\nexport default function SignUp() {\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [city, setCity] = useState(null);\n  const [state, setState] = useState(null);\n  const [county, setCounty] = useState(null);\n  const [zip, setZip] = useState(null);\n  const [phone, setPhone] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [userName, setUserName] = useState(null);\n  const [password, setPassword] = useState(null);\n\n  const handleTextChange = (evt) => {\n    if (evt.target.name === \"firstName\") {\n      setFirstName(evt.target.value);\n    }\n    if (evt.target.name === \"lastName\") {\n      setLastName(evt.target.value);\n    }\n    if (evt.target.name === \"city\") {\n      setCity(evt.target.value);\n    }\n    if (evt.target.name === \"state\") {\n      setState(evt.target.value);\n    }\n    if (evt.target.name === \"county\") {\n      setCounty(evt.target.value);\n    }\n    if (evt.target.name === \"zip\") {\n      setZip(evt.target.value);\n    }\n    if (evt.target.name === \"phone\") {\n      setPhone(evt.target.value);\n    }\n    if (evt.target.name === \"email\") {\n      setEmail(evt.target.value);\n    }\n    if (evt.target.name === \"userName\") {\n      setUserName(evt.target.value);\n    }\n    if (evt.target.name === \"password\") {\n      setPassword(evt.target.value);\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    (async () => {\n      const rawResponse = await fetch(\"/users\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          firstName: firstName,\n          lastName: lastName,\n          city: city,\n          state: state,\n          county: county,\n          zip: zip,\n          phone: phone,\n          email: email,\n          userName: userName,\n          password: password,\n        }),\n      });\n      const content = await rawResponse.json();\n      console.log(\"Response\", content);\n    })();\n  };\n\n  // useEffect(() => {\n  //   // console.log(Clear);\n  //   console.log(newUser);\n  // });\n\n  let textInput1 = useRef(null);\n  let textInput2 = useRef(null);\n  let textInput3 = useRef(null);\n  let textInput4 = useRef(null);\n  let textInput5 = useRef(null);\n  let textInput6 = useRef(null);\n  let textInput7 = useRef(null);\n  let textInput8 = useRef(null);\n  let textInput9 = useRef(null);\n  let textInput10 = useRef(null);\n\n  return (\n    <div>\n      <Container maxWidth=\"xs\" className=\"signUpContainer\">\n        <form className=\"signUpForm\" onSubmit={handleSubmit}>\n          <TextField\n            className=\"signUpInput\"\n            // autoFocus= \"true\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput1}\n            name=\"firstName\"\n            placeholder=\"First Name\"\n            type=\"text\"\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput2}\n            name=\"lastName\"\n            placeholder=\"Last Name\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput3}\n            name=\"city\"\n            placeholder=\"City\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput4}\n            name=\"state\"\n            placeholder=\"State\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput5}\n            name=\"county\"\n            placeholder=\"County\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput6}\n            name=\"zip\"\n            placeholder=\"Zip\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput7}\n            name=\"phone\"\n            placeholder=\"Phone\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput8}\n            name=\"email\"\n            placeholder=\"Email\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput9}\n            name=\"userName\"\n            placeholder=\"User Name\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"signUpInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput10}\n            name=\"password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            style={{ marginTop: 15 }}\n          />\n          <div className=\"newUserButton\">\n            <Button\n              type=\"submit\"\n              className=\"createUser-button\"\n              variant=\"contained\"\n              style={{\n                background: \"#E84855\",\n                color: \"whitesmoke\",\n                fontFamily: \"IBM Plex Mono\",\n              }}\n              onClick={() => {\n                setTimeout(() => {\n                  textInput1.current.value = \"\";\n                  textInput2.current.value = \"\";\n                  textInput3.current.value = \"\";\n                  textInput4.current.value = \"\";\n                  textInput5.current.value = \"\";\n                  textInput6.current.value = \"\";\n                  textInput7.current.value = \"\";\n                  textInput8.current.value = \"\";\n                  textInput9.current.value = \"\";\n                  textInput10.current.value = \"\";\n                }, 100);\n              }}\n            >\n              Create New User\n            </Button>\n          </div>\n        </form>\n      </Container>\n    </div>\n  );\n}\n","import NewBusiness from \"./NewBusiness\";\nexport default NewBusiness;\n","import React, { useState, useRef } from \"react\";\nimport \"../NewBusiness/NewBusiness.css\";\nimport { TextField, Button, Container, Typography } from \"@material-ui/core\";\n\nexport default function NewBusiness() {\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [chain, setChain] = useState(\"\");\n  const [militaryDiscount, setMilitaryDiscount] = useState(\"\");\n  // const [businesses, setBusinesses] = useState([]);\n  //   const [form, setForm] = useState({\n  //     firstName: '',\n  //     lastName: '',\n  //     city: '',\n  //     state: '',\n  //     zip: '',\n  //     county: '',\n  //     phone: '',\n  //   })\n\n  //   const handleTextChange = (evt) => {\n  //     const newState = form;\n  //     newState[evt.target.name] = evt.target.value;\n  //     setForm(newState);\n  //   };\n\n  // useEffect(() => {\n  //   console.log(typeof name);\n  //   console.log(name);\n  //   console.log(address);\n  //   console.log(chain);\n  //   console.log(militaryDiscount);\n  // });\n\n  const handleTextChange = (evt) => {\n    if (evt.target.name === \"name\") {\n      setName(evt.target.value);\n    }\n    if (evt.target.name === \"address\") {\n      setAddress(evt.target.value);\n    }\n    if (evt.target.name === \"city\") {\n      setCity(evt.target.value);\n    }\n    if (evt.target.name === \"state\") {\n      setState(evt.target.value);\n    }\n    if (evt.target.name === \"zip\") {\n      setZip(evt.target.value);\n    }\n    if (evt.target.name === \"chain\") {\n      setChain(evt.target.value);\n    }\n    if (evt.target.name === \"militaryDiscount\") {\n      setMilitaryDiscount(evt.target.value);\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    (async () => {\n      const rawResponse = await fetch(\"/businesses\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: name,\n          address: address,\n          city: city,\n          state: state,\n          zip: zip,\n          chain: chain,\n          militaryDiscount: militaryDiscount,\n        }),\n      });\n      const content = await rawResponse.json();\n      console.log(\"Response\", content);\n    })();\n\n    // fetch(\"/businesses\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     Accept: \"application/json\",\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     name: name,\n    //     address: address,\n    //     city: city,\n    //     state: state,\n    //     zip: zip,\n    //     chain: chain,\n    //     militaryDiscount: militaryDiscount,\n    //   }),\n    // });\n  };\n\n  let textInput1 = useRef(null);\n  let textInput2 = useRef(null);\n  let textInput3 = useRef(null);\n  let textInput4 = useRef(null);\n  let textInput5 = useRef(null);\n  let textInput6 = useRef(null);\n  let textInput7 = useRef(null);\n\n  return (\n    <div>\n      <Container maxWidth=\"xs\" className=\"newBusinessContainer\">\n        <form className=\"newBusinessForm\" onSubmit={handleSubmit}>\n          <Typography style={{ marginTop: 15, fontFamily: \"IBM Plex Mono\" }}>\n            Provide some basic info for our records...\n          </Typography>\n          <TextField\n            className=\"newBusinessInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput1}\n            name=\"name\"\n            placeholder=\"Business Name\"\n            type=\"text\"\n            style={{ marginTop: 20 }}\n          />\n          <TextField\n            className=\"newBusinessInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput2}\n            name=\"address\"\n            placeholder=\"Address\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"newBusinessInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput3}\n            name=\"city\"\n            placeholder=\"City\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"newBusinessInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput4}\n            name=\"state\"\n            placeholder=\"State\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"newBusinessInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput5}\n            name=\"zip\"\n            placeholder=\"Zip\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <TextField\n            className=\"newBusinessInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput6}\n            name=\"chain\"\n            placeholder=\"Is this business a chain?\"\n            type=\"text\"\n            style={{ marginTop: 15 }}\n          />\n          <Typography style={{ marginTop: 20, fontFamily: \"IBM Plex Mono\" }}>\n            And now, for the important part...\n          </Typography>\n          <TextField\n            className=\"newBusinessInput\"\n            required\n            onChange={handleTextChange}\n            inputRef={textInput7}\n            name=\"militaryDiscount\"\n            placeholder=\"What's their Discount?\"\n            type=\"text\"\n            style={{ marginTop: 20 }}\n          />\n          <div className=\"newBusinessButton\">\n            <Button\n              type=\"submit\"\n              className=\"createBusiness-button\"\n              variant=\"contained\"\n              style={{\n                background: \"#E84855\",\n                color: \"#fbf7ef\",\n                fontFamily: \"IBM Plex Mono\",\n              }}\n              onClick={() => {\n                setTimeout(() => {\n                  textInput1.current.value = \"\";\n                  textInput2.current.value = \"\";\n                  textInput3.current.value = \"\";\n                  textInput4.current.value = \"\";\n                  textInput5.current.value = \"\";\n                  textInput6.current.value = \"\";\n                  textInput7.current.value = \"\";\n                }, 100);\n              }}\n            >\n              Add Business\n            </Button>\n          </div>\n        </form>\n      </Container>\n    </div>\n  );\n}\n","import Map from \"./Map\";\nexport default Map;\n","import React, { useState } from \"react\";\nimport \"../Map/Map.css\";\n\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\n// const googleAPIKEY = process.env.GOOGLE_MAPS_API_KEY;\n// Geocode.setApiKey(googleAPIKEY);\n// console.log(googleAPIKEY);\n\nexport default function Map({ lat, lng }) {\n  const GOOGLE_MAPS_API_KEY = \"AIzaSyC8r2IDLhUdDgjAinNaflgkyQTxZO2Ne - k\";\n\n  //   const [selectedBusiness, setSelectedBusiness] = React.useState(null);\n\n  const mapStyles = {\n    height: \"51.5vh\",\n    width: \"90%\",\n  };\n  const defaultCenter = {\n    lat: Number(lat),\n    lng: Number(lng),\n  };\n\n  return (\n    <div>\n      <LoadScript googleMapsApiKey={GOOGLE_MAPS_API_KEY}>\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={15}\n          center={defaultCenter}\n        >\n          <Marker\n            //   key={props.business.id}\n            position={{\n              lat: Number(lat),\n              lng: Number(lng),\n            }}\n            // onClick={() => {\n            //   setSelectedBusiness(selectedBusiness);\n            // }}\n          />\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n","import Search from \"./Search\";\nexport default Search;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Map from \"../Map\";\nimport \"../Search/Search.css\";\nimport {\n  TextField,\n  Button,\n  // Container,\n  // Typography,\n  // List,\n  // Card,\n  // CardMedia,\n} from \"@material-ui/core\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Geocode from \"react-geocode\";\n\nexport default function Search() {\n  const [businesses, setBusinesses] = useState([]);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [zipInput, setZipInput] = useState(\"\");\n  const [cityInput, setCityInput] = useState(\"\");\n  const [dataPool, setDataPool] = useState([]);\n  const [selectedBusiness, setSelectedBusiness] = useState();\n  const [selectedAddress, setSelectedAddress] = useState(\"\");\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n\n  //\n  //// Use useEffect to call the function that will fetch data from backend and set state with response.  Now we have access to all our businesses and can filter through them as needed.\n  useEffect(() => {\n    callBackendAPI()\n      .then((res) => setBusinesses(res))\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  const callBackendAPI = async () => {\n    const response = await fetch(\"/businesses\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  //\n  //// Capitalize the first letter of the string so it matches with the Database\n  // const capitalize = (word) => {\n  //   if (typeof word !== \"string\") return \"\";\n  //   return word.charAt(0).toUpperCase() + word.slice(1);\n  // };\n\n  //\n  //\n  //// Setting state to whats entered in input boxes.  Commented out code is what was used when it wasn't being developed to deliver realtime results. Submit Buttons were used(later in code) to filter through businesses and match to each respective state.  Problem was regex was needed to get rid of needing to type in exact names.  I went the direction of realtime results which solved that problem as well.  Plus its just cooler ;)\n  const handleTextChange = (evt) => {\n    if (evt.target.name === \"name\") {\n      const input = evt.target.value;\n      const found = businesses.filter((business) =>\n        business.name.toLowerCase().includes(input.toLowerCase())\n      );\n      setDataPool(found);\n      // const input = evt.target.value;\n      // const cappedInput = capitalize(input);\n      // setNameInput(cappedInput);\n    }\n    if (evt.target.name === \"zip\") {\n      const input = evt.target.value;\n      const found = businesses.filter((business) =>\n        business.zip.toLowerCase().includes(input.toLowerCase())\n      );\n      setDataPool(found);\n      // const input = evt.target.value;\n      // const cappedInput = capitalize(input);\n      // setZipInput(cappedInput);\n    }\n    if (evt.target.name === \"city\") {\n      const input = evt.target.value;\n      const found = businesses.filter((business) =>\n        business.city.toLowerCase().includes(input.toLowerCase())\n      );\n      setDataPool(found);\n      // const input = evt.target.value;\n      // const cappedInput = capitalize(input);\n      // setCityInput(cappedInput);\n    }\n  };\n\n  //\n  //// submit functions\n  const handleNameSearch = (evt) => {\n    evt.preventDefault();\n    const found = businesses.filter((business) =>\n      business.name.toLowerCase().includes(nameInput.toLowerCase())\n    );\n    setDataPool(found);\n\n    // const found = businesses.filter((business) => business.name === nameInput);\n    // setDataPool(found);\n  };\n  const handleZipSearch = (evt) => {\n    evt.preventDefault();\n    const found = businesses.filter((business) => business.zip === zipInput);\n    setDataPool(found);\n  };\n  const handleCitySearch = (evt) => {\n    evt.preventDefault();\n    const found = businesses.filter((business) => business.city === cityInput);\n    setDataPool(found);\n  };\n\n  let textInput1 = useRef(null);\n  let textInput2 = useRef(null);\n  let textInput3 = useRef(null);\n\n  //\n  //// Code used to make table function with pages and rows\n  // const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    // event.preventDefault();\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    // event.preventDefault();\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleMarker = (idx) => {\n    console.log(idx);\n    const business = dataPool[Number(idx)];\n    setSelectedBusiness(business);\n    console.log(selectedBusiness);\n\n    const markerAddress = business.address;\n    setSelectedAddress(markerAddress);\n    console.log(selectedAddress);\n  };\n\n  // Map GeoCoding\n  const GOOGLE_MAPS_API_KEY = \"AIzaSyC8r2IDLhUdDgjAinNaflgkyQTxZO2Ne - k\";\n  Geocode.setApiKey(GOOGLE_MAPS_API_KEY);\n  Geocode.fromAddress(selectedAddress).then(\n    (response) => {\n      const { lat, lng } = response.results[0].geometry.location;\n      console.log(lat, lng);\n      setLat(lat);\n      setLng(lng);\n      // console.log(response);\n    },\n    (error) => {\n      console.error(error);\n    }\n  );\n\n  return (\n    <div>\n      <div className=\"mainContainer\">\n        <span\n          style={{ textAlign: \"center\", fontSize: \"26px\", color: \"#141313\" }}\n        >\n          Search for Businesses\n        </span>\n        <div className=\"searchContainer\">\n          <form className=\"inputAndButton\" onSubmit={handleNameSearch}>\n            <TextField\n              className=\"BusinessInput\"\n              variant=\"outlined\"\n              // autoComplete\n              onChange={handleTextChange}\n              inputRef={textInput1}\n              name=\"name\"\n              placeholder=\"Business Name\"\n              type=\"text\"\n              style={{ marginTop: 20 }}\n            />\n            {/* <Button\n              type=\"submit\"\n              className=\"searchButton\"\n              variant=\"contained\"\n              style={{\n                background: \"#E84855\",\n                color: \"#fbf7ef\",\n                marginTop: \"15px\",\n                width: \"65%\",\n                left: \"16%\",\n              }}\n              onClick={() => {\n                setTimeout(() => {\n                  textInput1.current.value = \"\";\n                  textInput2.current.value = \"\";\n                  textInput3.current.value = \"\";\n                }, 100);\n              }}\n            >\n              Search by Name\n            </Button> */}\n          </form>\n          <form className=\"inputAndButton\" onSubmit={handleZipSearch}>\n            <TextField\n              className=\"ZipInput\"\n              // autoComplete\n              variant=\"outlined\"\n              onChange={handleTextChange}\n              inputRef={textInput2}\n              name=\"zip\"\n              placeholder=\"Zip Code\"\n              type=\"text\"\n              style={{ marginTop: 20 }}\n            />\n            {/* <Button\n              type=\"submit\"\n              className=\"searchButton\"\n              variant=\"contained\"\n              style={{\n                background: \"#E84855\",\n                color: \"#fbf7ef\",\n                marginTop: \"15px\",\n                width: \"65%\",\n                left: \"16%\",\n              }}\n              onClick={() => {\n                setTimeout(() => {\n                  textInput1.current.value = \"\";\n                  textInput2.current.value = \"\";\n                  textInput3.current.value = \"\";\n                }, 100);\n              }}\n            >\n              Search by Zip\n            </Button> */}\n          </form>\n          <form className=\"inputAndButton\" onSubmit={handleCitySearch}>\n            <TextField\n              className=\"CityInput\"\n              // autoComplete\n              variant=\"outlined\"\n              onChange={handleTextChange}\n              inputRef={textInput3}\n              name=\"city\"\n              placeholder=\"City\"\n              type=\"text\"\n              style={{ marginTop: 20 }}\n            />\n            {/* <Button\n              type=\"submit\"\n              className=\"searchButton\"\n              variant=\"contained\"\n              style={{\n                background: \"#E84855\",\n                color: \"#fbf7ef\",\n                marginTop: \"15px\",\n                width: \"65%\",\n                left: \"16%\",\n              }}\n              onClick={() => {\n                setTimeout(() => {\n                  textInput1.current.value = \"\";\n                  textInput2.current.value = \"\";\n                  textInput3.current.value = \"\";\n                }, 100);\n              }}\n            >\n              Search by City\n            </Button> */}\n          </form>\n          <div>\n            <Button\n              className=\"resetButton\"\n              variant=\"contained\"\n              style={{\n                background: \"#E84855\",\n                color: \"#fbf7ef\",\n                marginTop: \"15px\",\n                width: \"65%\",\n                left: \"16%\",\n                fontFamily: \"IBM Plex Mono\",\n              }}\n              onClick={() => {\n                setTimeout(() => {\n                  textInput1.current.value = \"\";\n                  textInput2.current.value = \"\";\n                  textInput3.current.value = \"\";\n                }, 100);\n              }}\n            >\n              Reset\n            </Button>\n          </div>\n        </div>\n        <div className=\"showBusinessAndMap\">\n          <div className=\"showBusiness\">\n            <Paper>\n              <TableContainer style={{ height: 470 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align=\"left\">Name</TableCell>\n                      <TableCell align=\"left\">Address</TableCell>\n                      <TableCell align=\"left\">City</TableCell>\n                      <TableCell align=\"left\">State</TableCell>\n                      <TableCell align=\"left\">Zip</TableCell>\n                      <TableCell align=\"left\">Chain</TableCell>\n                      <TableCell align=\"left\">Military Discount</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {dataPool\n                      .slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage\n                      )\n                      .map((business, idx) => {\n                        return (\n                          <TableRow\n                            key={idx}\n                            hover\n                            role=\"checkbox\"\n                            tabIndex={-1}\n                            onClick={(index) => handleMarker(idx, index)}\n\n                            // key={row.code}\n                          >\n                            <TableCell align=\"left\">{business.name}</TableCell>\n                            <TableCell align=\"left\">\n                              {business.address}\n                            </TableCell>\n                            <TableCell align=\"left\">{business.city}</TableCell>\n                            <TableCell align=\"left\">{business.state}</TableCell>\n                            <TableCell align=\"left\">{business.zip}</TableCell>\n                            <TableCell align=\"left\">{business.chain}</TableCell>\n                            <TableCell align=\"left\">\n                              {business.militaryDiscount}\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={dataPool.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </div>\n          <div className=\"showMap\">\n            <Map lat={lat} lng={lng} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport cookie from \"cookie\";\nimport Login from \"./components/Login\";\nimport GettingStarted from \"./components/GettingStarted\";\nimport SignUp from \"./components/SignUp\";\nimport NewBusiness from \"./components/NewBusiness\";\nimport Search from \"./components/Search\";\n// import Car from './components/Car'\n// import Login from './components/Login'\n\n// Write checkAuth function here\n// Check the cookies for a cookie called \"loggedIn\"\n\n// Write ProtectedRoute function heref\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  console.log({ ...rest });\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return checkAuth() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    />\n  );\n};\n\nconst checkAuth = () => {\n  const cookies = cookie.parse(document.cookie);\n  console.log(cookie);\n\n  return cookies[\"loggedIn\"] ? true : false;\n};\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={GettingStarted} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signUp\" component={SignUp} />\n      <Route path=\"/newbusiness\" component={NewBusiness} />\n      <Route path=\"/search\" component={Search} />\n      {/* <ProtectedRoute exact path=\"/\" component={Home} /> */}\n      {/* <ProtectedRoute path=\"/about\" component={About} />\n            <ProtectedRoute path=\"/car/:id\" component={Car} /> */}\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Router from \"./Router\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Router />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}